{
	"info": {
		"_postman_id": "safework-api-collection-v1",
		"name": "SafeWork API",
		"description": "Complete API collection for SafeWork - Workplace Safety Asset Management Platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse response and save token",
									"var jsonData = pm.response.json();",
									"",
									"// Save token to environment",
									"pm.environment.set(\"token\", jsonData.token);",
									"pm.environment.set(\"userId\", jsonData.id);",
									"pm.environment.set(\"organizationId\", jsonData.organizationId);",
									"pm.environment.set(\"userRole\", jsonData.role);",
									"",
									"// Tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    pm.expect(jsonData).to.have.property('token');",
									"});",
									"",
									"pm.test(\"User role is ADMIN\", function () {",
									"    pm.expect(jsonData.role).to.eql('ADMIN');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@apex.com\",\n    \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Supervisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"supervisorToken\", jsonData.token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User role is SUPERVISOR\", function () {",
									"    pm.expect(jsonData.role).to.eql('SUPERVISOR');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"supervisor@apex.com\",\n    \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Inspector",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"inspectorToken\", jsonData.token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User role is INSPECTOR\", function () {",
									"    pm.expect(jsonData.role).to.eql('INSPECTOR');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"inspector@apex.com\",\n    \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login with Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"wrong@email.com\",\n    \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Assets",
			"item": [
				{
					"name": "Get All Assets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is paginated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('content');",
									"    pm.expect(jsonData).to.have.property('pageable');",
									"    pm.expect(jsonData).to.have.property('totalElements');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/assets?page=0&size=20&sort=id,desc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "sort",
									"value": "id,desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"    pm.test(\"Response has asset data\", function () {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.have.property('id');",
									"        pm.expect(jsonData).to.have.property('assetTag');",
									"        pm.expect(jsonData).to.have.property('name');",
									"    });",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Asset not found\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/assets/{{assetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets",
								"{{assetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset (Admin Only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"assetId\", jsonData.id);",
									"    ",
									"    pm.test(\"Asset created successfully\", function () {",
									"        pm.expect(jsonData).to.have.property('id');",
									"        pm.expect(jsonData.assetTag).to.exist;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assetTag\": \"APX-TEST-{{$randomInt}}\",\n    \"name\": \"Test Equipment {{$randomInt}}\",\n    \"assetTypeId\": 1,\n    \"qrCodeId\": \"QR-{{$randomUUID}}\",\n    \"status\": \"ACTIVE\",\n    \"locationId\": 1,\n    \"departmentId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Asset updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.include(\"Updated\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Equipment Name\",\n    \"status\": \"MAINTENANCE\",\n    \"version\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/assets/{{assetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets",
								"{{assetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/assets/{{assetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets",
								"{{assetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset (Supervisor - Should Fail)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Error message indicates permission denied\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"permission\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{supervisorToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assetTag\": \"APX-FAIL-001\",\n    \"name\": \"Should Not Create\",\n    \"assetTypeId\": 1,\n    \"qrCodeId\": \"QR-FAIL-001\",\n    \"status\": \"ACTIVE\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains users\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.be.an('array');",
									"    pm.expect(jsonData.content.length).to.be.greaterThan(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"newUserId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User {{$randomInt}}\",\n    \"email\": \"test{{$randomInt}}@apex.com\",\n    \"password\": \"TestPass123!\",\n    \"role\": \"USER\",\n    \"departmentId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated User Name\",\n    \"role\": \"INSPECTOR\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/{{newUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"{{newUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/users/{{newUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"{{newUserId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Departments",
			"item": [
				{
					"name": "Get All Departments",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/departments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"departments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Department",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"departmentId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Engineering\",\n    \"code\": \"ENG\",\n    \"description\": \"Engineering and Technical Services\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/departments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"departments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Department by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/departments/{{departmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"departments",
								"{{departmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Department",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Engineering & Innovation\",\n    \"description\": \"Updated description for engineering department\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/departments/{{departmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"departments",
								"{{departmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Department",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/departments/{{departmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"departments",
								"{{departmentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Locations",
			"item": [
				{
					"name": "Get All Locations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"locationId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"West Coast Distribution Center\",\n    \"locationType\": \"WAREHOUSE\",\n    \"address\": \"789 Pacific Boulevard\",\n    \"city\": \"Los Angeles\",\n    \"state\": \"CA\",\n    \"zipCode\": \"90001\",\n    \"country\": \"USA\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Location by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/locations/{{locationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"locations",
								"{{locationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Location",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"West Coast Main Distribution Center\",\n    \"active\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/locations/{{locationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"locations",
								"{{locationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Location",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/locations/{{locationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"locations",
								"{{locationId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Suppliers",
			"item": [
				{
					"name": "Get All Suppliers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"suppliers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"supplierId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Safety Equipment Inc\",\n    \"contactName\": \"Jane Doe\",\n    \"email\": \"jane@safetyequip.com\",\n    \"phone\": \"555-0200\",\n    \"address\": \"321 Safety Lane\",\n    \"city\": \"Boston\",\n    \"state\": \"MA\",\n    \"zipCode\": \"02101\",\n    \"country\": \"USA\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"suppliers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Supplier by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"suppliers",
								"{{supplierId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Supplier",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Safety Equipment International\",\n    \"email\": \"contact@safetyequip.com\",\n    \"version\": 0\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"suppliers",
								"{{supplierId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Supplier",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"suppliers",
								"{{supplierId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Cases",
			"item": [
				{
					"name": "Unauthorized - No Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Not Found - Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/assets/99999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bad Request - Invalid Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Missing Required Fields\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"assets"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8081/api",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "supervisorToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "inspectorToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "assetId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "departmentId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "locationId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "supplierId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "organizationId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "newUserId",
			"value": "",
			"type": "string"
		}
	]
}